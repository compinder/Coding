// Online C++ compiler to run C++ program online
#include <iostream>

using namespace std;



class MyQueue {
    struct QueueNode
    {
        int data;
        QueueNode *next;
        QueueNode(int a)
        {
            data = a;
            next = NULL;
        }
    };
    QueueNode *front;
    QueueNode *rear;
public:
    void push(int);
    void printQueue(void);
    int pop();
    MyQueue() {front = rear = NULL;}
};



int main()
{
    MyQueue *sq = new MyQueue();
    sq->push(2);
    sq->push(3);
    sq->push(4);
    cout<<"Items in queue:"<<endl;
    sq->printQueue();
    cout<<"pop: "<<sq->pop()<<endl;
    cout<<"pop: "<<sq->pop()<<endl;
    cout<<"pop: "<<sq->pop()<<endl;
    cout<<"pop: "<<sq->pop()<<endl;
    cout<<endl;
    return 0;
}
void MyQueue:: printQueue(void)
{
    // Your Code
    struct QueueNode *qnode = front;
    if(front == nullptr){
        return;
    }
    while(qnode != nullptr){
        cout<<qnode->data<<" ";
        qnode = qnode->next;
    }
    cout<<endl;
}

//Function to push an element into the queue.
void MyQueue:: push(int x)
{
    // Your Code
    struct QueueNode *qnode = new QueueNode(x);
    if(front == nullptr){
        front = qnode;
        rear = qnode;
    }
    else{
        rear->next = qnode;
        rear = qnode;
    }
}

//Function to pop front element from the queue.
int MyQueue :: pop()
{
        // Your Code  
    struct QueueNode *temp;
    int rval;
    if(front == nullptr){
        cout<<"queue is empty: ";
        return -1;
    }
    temp = front;
    rval = temp->data;
    front = front->next;
    delete temp;
    return rval;
}

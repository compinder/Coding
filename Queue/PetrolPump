// Find the first circular tour that visits all petrol pumps.

#include <iostream>

using namespace std;

// assume 1 unit of distance can be travelled with 1 unit of petrol
struct petrolPump
{
    int petrol;    // pertrol units at current petrol pump
    int distance;  // distance from current station to next station
};

class Solution{
  public:
  
    //Function to find starting point where the truck can start to get through
    //the complete circle without exhausting its petrol in between.
    int tour(petrolPump p[],int n)
    {
       //Your code here
       int current = 0;
       int deficit = 0;
       int start = 0;
       for(int i=0;i<n;i++){
           current = current + p[i].petrol - p[i].distance;
           if(current < 0){
               deficit += current;
               current = 0;
               start = i+1;
           }
       }
       return ((current + deficit)>=0 ? start:-1);
    }
};


int main()
{
    petrolPump p[] = {{55,52},{33,100},{77,61}, {40,69}};
    petrolPump q[] = {{4,6},{6,5},{7,3}, {4,5}};
    int n = sizeof(p)/sizeof(p[0]);
    Solution obj;
    cout<<obj.tour(p,n)<<endl;
    n = sizeof(q)/sizeof(q[0]);
    cout<<obj.tour(q,n)<<endl;
    return 0;
}

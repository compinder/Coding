class Queue {
    stack<int> input, output;
public:

    void enqueue(int x) {
        input.push(x);
    }

    int dequeue() {
        int elm = -1;
        if(!output.empty()){
            elm = output.top();
            output.pop();
        }
        else{
            if(!input.empty()){
                while(!input.empty()){
                    output.push(input.top());
                    input.pop();
                }
                elm = output.top();
                output.pop();
            }
        }
        return elm;
    }
};
int main()
{
        Queue ob;
        ob.enqueue(2);
        ob.enqueue(3);
        ob.enqueue(4);
        
        cout<<"dequeue:"<<endl;
        cout<<ob.dequeue()<<" ";
        cout<<ob.dequeue()<<" ";
        cout<<ob.dequeue()<<" ";
        cout<<ob.dequeue()<<" "; // empty
        cout<<endl;
    
}
